#[derive(Clone)]
pub enum ColorSpace {
    RGB(u8, u8, u8), // 6 + 6 + 6 bit rgb color
    None,
}

fn rgb6(r: u8, b: u8, g: u8) -> ColorSpace {
    ColorSpace::RGB(r << 2, b << 2, g << 2)
}

pub fn text_palette() -> [ColorSpace; 64] {[
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x2a,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x00,0x00,0x15),rgb6(0x00,0x00,0x3f),rgb6(0x00,0x2a,0x15),rgb6(0x00,0x2a,0x3f),
    rgb6(0x2a,0x00,0x15),rgb6(0x2a,0x00,0x3f),rgb6(0x2a,0x2a,0x15),rgb6(0x2a,0x2a,0x3f),
    rgb6(0x00,0x15,0x00),rgb6(0x00,0x15,0x2a),rgb6(0x00,0x3f,0x00),rgb6(0x00,0x3f,0x2a),
    rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x15,0x2a),rgb6(0x2a,0x3f,0x00),rgb6(0x2a,0x3f,0x2a),
    rgb6(0x00,0x15,0x15),rgb6(0x00,0x15,0x3f),rgb6(0x00,0x3f,0x15),rgb6(0x00,0x3f,0x3f),
    rgb6(0x2a,0x15,0x15),rgb6(0x2a,0x15,0x3f),rgb6(0x2a,0x3f,0x15),rgb6(0x2a,0x3f,0x3f),
    rgb6(0x15,0x00,0x00),rgb6(0x15,0x00,0x2a),rgb6(0x15,0x2a,0x00),rgb6(0x15,0x2a,0x2a),
    rgb6(0x3f,0x00,0x00),rgb6(0x3f,0x00,0x2a),rgb6(0x3f,0x2a,0x00),rgb6(0x3f,0x2a,0x2a),
    rgb6(0x15,0x00,0x15),rgb6(0x15,0x00,0x3f),rgb6(0x15,0x2a,0x15),rgb6(0x15,0x2a,0x3f),
    rgb6(0x3f,0x00,0x15),rgb6(0x3f,0x00,0x3f),rgb6(0x3f,0x2a,0x15),rgb6(0x3f,0x2a,0x3f),
    rgb6(0x15,0x15,0x00),rgb6(0x15,0x15,0x2a),rgb6(0x15,0x3f,0x00),rgb6(0x15,0x3f,0x2a),
    rgb6(0x3f,0x15,0x00),rgb6(0x3f,0x15,0x2a),rgb6(0x3f,0x3f,0x00),rgb6(0x3f,0x3f,0x2a),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
]}

pub fn mtext_palette() -> [ColorSpace; 64] {[
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
]}

pub fn mtext_s3_palette() -> [ColorSpace; 64] {[
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x00),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),rgb6(0x3f,0x3f,0x3f),
]}

pub fn ega_palette() -> [ColorSpace; 64] {[
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
]}

pub fn cga_palette() -> [ColorSpace; 16] {[
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
]}

pub fn cga_palette_2() -> [ColorSpace; 64] {[
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
]}

pub fn vga_palette() -> [ColorSpace; 248] {[
    rgb6(0x00,0x00,0x00),rgb6(0x00,0x00,0x2a),rgb6(0x00,0x2a,0x00),rgb6(0x00,0x2a,0x2a),
    rgb6(0x2a,0x00,0x00),rgb6(0x2a,0x00,0x2a),rgb6(0x2a,0x15,0x00),rgb6(0x2a,0x2a,0x2a),
    rgb6(0x15,0x15,0x15),rgb6(0x15,0x15,0x3f),rgb6(0x15,0x3f,0x15),rgb6(0x15,0x3f,0x3f),
    rgb6(0x3f,0x15,0x15),rgb6(0x3f,0x15,0x3f),rgb6(0x3f,0x3f,0x15),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x00,0x00,0x00),rgb6(0x05,0x05,0x05),rgb6(0x08,0x08,0x08),rgb6(0x0b,0x0b,0x0b),
    rgb6(0x0e,0x0e,0x0e),rgb6(0x11,0x11,0x11),rgb6(0x14,0x14,0x14),rgb6(0x18,0x18,0x18),
    rgb6(0x1c,0x1c,0x1c),rgb6(0x20,0x20,0x20),rgb6(0x24,0x24,0x24),rgb6(0x28,0x28,0x28),
    rgb6(0x2d,0x2d,0x2d),rgb6(0x32,0x32,0x32),rgb6(0x38,0x38,0x38),rgb6(0x3f,0x3f,0x3f),
    rgb6(0x00,0x00,0x3f),rgb6(0x10,0x00,0x3f),rgb6(0x1f,0x00,0x3f),rgb6(0x2f,0x00,0x3f),
    rgb6(0x3f,0x00,0x3f),rgb6(0x3f,0x00,0x2f),rgb6(0x3f,0x00,0x1f),rgb6(0x3f,0x00,0x10),
    rgb6(0x3f,0x00,0x00),rgb6(0x3f,0x10,0x00),rgb6(0x3f,0x1f,0x00),rgb6(0x3f,0x2f,0x00),
    rgb6(0x3f,0x3f,0x00),rgb6(0x2f,0x3f,0x00),rgb6(0x1f,0x3f,0x00),rgb6(0x10,0x3f,0x00),
    rgb6(0x00,0x3f,0x00),rgb6(0x00,0x3f,0x10),rgb6(0x00,0x3f,0x1f),rgb6(0x00,0x3f,0x2f),
    rgb6(0x00,0x3f,0x3f),rgb6(0x00,0x2f,0x3f),rgb6(0x00,0x1f,0x3f),rgb6(0x00,0x10,0x3f),
    rgb6(0x1f,0x1f,0x3f),rgb6(0x27,0x1f,0x3f),rgb6(0x2f,0x1f,0x3f),rgb6(0x37,0x1f,0x3f),
    rgb6(0x3f,0x1f,0x3f),rgb6(0x3f,0x1f,0x37),rgb6(0x3f,0x1f,0x2f),rgb6(0x3f,0x1f,0x27),

    rgb6(0x3f,0x1f,0x1f),rgb6(0x3f,0x27,0x1f),rgb6(0x3f,0x2f,0x1f),rgb6(0x3f,0x37,0x1f),
    rgb6(0x3f,0x3f,0x1f),rgb6(0x37,0x3f,0x1f),rgb6(0x2f,0x3f,0x1f),rgb6(0x27,0x3f,0x1f),
    rgb6(0x1f,0x3f,0x1f),rgb6(0x1f,0x3f,0x27),rgb6(0x1f,0x3f,0x2f),rgb6(0x1f,0x3f,0x37),
    rgb6(0x1f,0x3f,0x3f),rgb6(0x1f,0x37,0x3f),rgb6(0x1f,0x2f,0x3f),rgb6(0x1f,0x27,0x3f),
    rgb6(0x2d,0x2d,0x3f),rgb6(0x31,0x2d,0x3f),rgb6(0x36,0x2d,0x3f),rgb6(0x3a,0x2d,0x3f),
    rgb6(0x3f,0x2d,0x3f),rgb6(0x3f,0x2d,0x3a),rgb6(0x3f,0x2d,0x36),rgb6(0x3f,0x2d,0x31),
    rgb6(0x3f,0x2d,0x2d),rgb6(0x3f,0x31,0x2d),rgb6(0x3f,0x36,0x2d),rgb6(0x3f,0x3a,0x2d),
    rgb6(0x3f,0x3f,0x2d),rgb6(0x3a,0x3f,0x2d),rgb6(0x36,0x3f,0x2d),rgb6(0x31,0x3f,0x2d),
    rgb6(0x2d,0x3f,0x2d),rgb6(0x2d,0x3f,0x31),rgb6(0x2d,0x3f,0x36),rgb6(0x2d,0x3f,0x3a),
    rgb6(0x2d,0x3f,0x3f),rgb6(0x2d,0x3a,0x3f),rgb6(0x2d,0x36,0x3f),rgb6(0x2d,0x31,0x3f),
    rgb6(0x00,0x00,0x1c),rgb6(0x07,0x00,0x1c),rgb6(0x0e,0x00,0x1c),rgb6(0x15,0x00,0x1c),
    rgb6(0x1c,0x00,0x1c),rgb6(0x1c,0x00,0x15),rgb6(0x1c,0x00,0x0e),rgb6(0x1c,0x00,0x07),
    rgb6(0x1c,0x00,0x00),rgb6(0x1c,0x07,0x00),rgb6(0x1c,0x0e,0x00),rgb6(0x1c,0x15,0x00),
    rgb6(0x1c,0x1c,0x00),rgb6(0x15,0x1c,0x00),rgb6(0x0e,0x1c,0x00),rgb6(0x07,0x1c,0x00),
    rgb6(0x00,0x1c,0x00),rgb6(0x00,0x1c,0x07),rgb6(0x00,0x1c,0x0e),rgb6(0x00,0x1c,0x15),
    rgb6(0x00,0x1c,0x1c),rgb6(0x00,0x15,0x1c),rgb6(0x00,0x0e,0x1c),rgb6(0x00,0x07,0x1c),

    rgb6(0x0e,0x0e,0x1c),rgb6(0x11,0x0e,0x1c),rgb6(0x15,0x0e,0x1c),rgb6(0x18,0x0e,0x1c),
    rgb6(0x1c,0x0e,0x1c),rgb6(0x1c,0x0e,0x18),rgb6(0x1c,0x0e,0x15),rgb6(0x1c,0x0e,0x11),
    rgb6(0x1c,0x0e,0x0e),rgb6(0x1c,0x11,0x0e),rgb6(0x1c,0x15,0x0e),rgb6(0x1c,0x18,0x0e),
    rgb6(0x1c,0x1c,0x0e),rgb6(0x18,0x1c,0x0e),rgb6(0x15,0x1c,0x0e),rgb6(0x11,0x1c,0x0e),
    rgb6(0x0e,0x1c,0x0e),rgb6(0x0e,0x1c,0x11),rgb6(0x0e,0x1c,0x15),rgb6(0x0e,0x1c,0x18),
    rgb6(0x0e,0x1c,0x1c),rgb6(0x0e,0x18,0x1c),rgb6(0x0e,0x15,0x1c),rgb6(0x0e,0x11,0x1c),
    rgb6(0x14,0x14,0x1c),rgb6(0x16,0x14,0x1c),rgb6(0x18,0x14,0x1c),rgb6(0x1a,0x14,0x1c),
    rgb6(0x1c,0x14,0x1c),rgb6(0x1c,0x14,0x1a),rgb6(0x1c,0x14,0x18),rgb6(0x1c,0x14,0x16),
    rgb6(0x1c,0x14,0x14),rgb6(0x1c,0x16,0x14),rgb6(0x1c,0x18,0x14),rgb6(0x1c,0x1a,0x14),
    rgb6(0x1c,0x1c,0x14),rgb6(0x1a,0x1c,0x14),rgb6(0x18,0x1c,0x14),rgb6(0x16,0x1c,0x14),
    rgb6(0x14,0x1c,0x14),rgb6(0x14,0x1c,0x16),rgb6(0x14,0x1c,0x18),rgb6(0x14,0x1c,0x1a),
    rgb6(0x14,0x1c,0x1c),rgb6(0x14,0x1a,0x1c),rgb6(0x14,0x18,0x1c),rgb6(0x14,0x16,0x1c),
    rgb6(0x00,0x00,0x10),rgb6(0x04,0x00,0x10),rgb6(0x08,0x00,0x10),rgb6(0x0c,0x00,0x10),
    rgb6(0x10,0x00,0x10),rgb6(0x10,0x00,0x0c),rgb6(0x10,0x00,0x08),rgb6(0x10,0x00,0x04),
    rgb6(0x10,0x00,0x00),rgb6(0x10,0x04,0x00),rgb6(0x10,0x08,0x00),rgb6(0x10,0x0c,0x00),
    rgb6(0x10,0x10,0x00),rgb6(0x0c,0x10,0x00),rgb6(0x08,0x10,0x00),rgb6(0x04,0x10,0x00),

    rgb6(0x00,0x10,0x00),rgb6(0x00,0x10,0x04),rgb6(0x00,0x10,0x08),rgb6(0x00,0x10,0x0c),
    rgb6(0x00,0x10,0x10),rgb6(0x00,0x0c,0x10),rgb6(0x00,0x08,0x10),rgb6(0x00,0x04,0x10),
    rgb6(0x08,0x08,0x10),rgb6(0x0a,0x08,0x10),rgb6(0x0c,0x08,0x10),rgb6(0x0e,0x08,0x10),
    rgb6(0x10,0x08,0x10),rgb6(0x10,0x08,0x0e),rgb6(0x10,0x08,0x0c),rgb6(0x10,0x08,0x0a),
    rgb6(0x10,0x08,0x08),rgb6(0x10,0x0a,0x08),rgb6(0x10,0x0c,0x08),rgb6(0x10,0x0e,0x08),
    rgb6(0x10,0x10,0x08),rgb6(0x0e,0x10,0x08),rgb6(0x0c,0x10,0x08),rgb6(0x0a,0x10,0x08),
    rgb6(0x08,0x10,0x08),rgb6(0x08,0x10,0x0a),rgb6(0x08,0x10,0x0c),rgb6(0x08,0x10,0x0e),
    rgb6(0x08,0x10,0x10),rgb6(0x08,0x0e,0x10),rgb6(0x08,0x0c,0x10),rgb6(0x08,0x0a,0x10),
    rgb6(0x0b,0x0b,0x10),rgb6(0x0c,0x0b,0x10),rgb6(0x0d,0x0b,0x10),rgb6(0x0f,0x0b,0x10),
    rgb6(0x10,0x0b,0x10),rgb6(0x10,0x0b,0x0f),rgb6(0x10,0x0b,0x0d),rgb6(0x10,0x0b,0x0c),
    rgb6(0x10,0x0b,0x0b),rgb6(0x10,0x0c,0x0b),rgb6(0x10,0x0d,0x0b),rgb6(0x10,0x0f,0x0b),
    rgb6(0x10,0x10,0x0b),rgb6(0x0f,0x10,0x0b),rgb6(0x0d,0x10,0x0b),rgb6(0x0c,0x10,0x0b),
    rgb6(0x0b,0x10,0x0b),rgb6(0x0b,0x10,0x0c),rgb6(0x0b,0x10,0x0d),rgb6(0x0b,0x10,0x0f),
    rgb6(0x0b,0x10,0x10),rgb6(0x0b,0x0f,0x10),rgb6(0x0b,0x0d,0x10),rgb6(0x0b,0x0c,0x10),
]}


pub fn default_vga_palette() -> Vec<ColorSpace> { // TODO stop use. XXX pal is being changed by writes to 0x3c9
    let pal = [
        // 0-15: CGA palette
        rgb6(0x00, 0x00, 0x00), // 0. black
        rgb6(0x00, 0x00, 0xAA), // 1. blue
        rgb6(0x00, 0xAA, 0x00), // 2. green
        rgb6(0x00, 0xAA, 0xAA), // 3. cyan
        rgb6(0xAA, 0x00, 0x00), // 4. red
        rgb6(0xAA, 0x00, 0xAA), // 5. magenta
        rgb6(0xAA, 0x55, 0x00), // 6. brown
        rgb6(0xAA, 0xAA, 0xAA), // 7. gray
        rgb6(0x55, 0x55, 0x55), // 8. dark gray
        rgb6(0x55, 0x55, 0xFF), // 9. bright blue
        rgb6(0x55, 0xFF, 0x55), // 10. bright green
        rgb6(0x55, 0xFF, 0xFF), // 11. bright cyan
        rgb6(0xFF, 0x55, 0x55), // 12. bright red
        rgb6(0xFF, 0x55, 0xFF), // 13. bright magenta
        rgb6(0xFF, 0xFF, 0x55), // 14. yellow
        rgb6(0xFF, 0xFF, 0xFF), // 15. white

        // 16-31: gray scale
        rgb6(0x00, 0x00, 0x00), // 16. black
        rgb6(0x14, 0x14, 0x14),
        rgb6(0x20, 0x20, 0x20),
        rgb6(0x2C, 0x2C, 0x2C),
        rgb6(0x38, 0x38, 0x38),
        rgb6(0x45, 0x45, 0x45),
        rgb6(0x51, 0x51, 0x51),
        rgb6(0x61, 0x61, 0x61),
        rgb6(0x71, 0x71, 0x71),
        rgb6(0x82, 0x82, 0x82),
        rgb6(0x92, 0x92, 0x92),
        rgb6(0xA2, 0xA2, 0xA2),
        rgb6(0xB6, 0xB6, 0xB6),
        rgb6(0xCB, 0xCB, 0xCB),
        rgb6(0xE3, 0xE3, 0xE3),
        rgb6(0xFF, 0xFF, 0xFF), // 31. white

        // 32-55: rainbow
        rgb6(0x00, 0x00, 0xFF), // 32. blue
        rgb6(0x41, 0x00, 0xFF),
        rgb6(0x7D, 0x00, 0xFF),
        rgb6(0xBE, 0x00, 0xFF),
        rgb6(0xFF, 0x00, 0xFF), // 36. magenta
        rgb6(0xFF, 0x00, 0xBE),
        rgb6(0xFF, 0x00, 0x7D),
        rgb6(0xFF, 0x00, 0x41),
        rgb6(0xFF, 0x00, 0x00), // 40. red
        rgb6(0xFF, 0x41, 0x00),
        rgb6(0xFF, 0x7D, 0x00),
        rgb6(0xFF, 0xBE, 0x00),
        rgb6(0xFF, 0xFF, 0x00), // 44. yellow
        rgb6(0xBE, 0xFF, 0x00),
        rgb6(0x7D, 0xFF, 0x00),
        rgb6(0x41, 0xFF, 0x00),
        rgb6(0x00, 0xFF, 0x00), // 48. green
        rgb6(0x00, 0xFF, 0x41),
        rgb6(0x00, 0xFF, 0x7D),
        rgb6(0x00, 0xFF, 0xBE),
        rgb6(0x00, 0xFF, 0xFF), // 52. cyan
        rgb6(0x00, 0xBE, 0xFF),
        rgb6(0x00, 0x7D, 0xFF),
        rgb6(0x00, 0x41, 0xFF),

        // 56-79: 49% whitemix of 32-55
        rgb6(0x7D, 0x7D, 0xFF), // 56. blue
        rgb6(0x9E, 0x7D, 0xFF),
        rgb6(0xBE, 0x7D, 0xFF),
        rgb6(0xDF, 0x7D, 0xFF),
        rgb6(0xFF, 0x7D, 0xFF), // 60. magenta
        rgb6(0xFF, 0x7D, 0xDF),
        rgb6(0xFF, 0x7D, 0xBE),
        rgb6(0xFF, 0x7D, 0x9E),
        rgb6(0xFF, 0x7D, 0x7D), // 64. red
        rgb6(0xFF, 0x9E, 0x7D),
        rgb6(0xFF, 0xBE, 0x7D),
        rgb6(0xFF, 0xDF, 0x7D),
        rgb6(0xFF, 0xFF, 0x7D), // 68. yellow
        rgb6(0xDF, 0xFF, 0x7D),
        rgb6(0xBE, 0xFF, 0x7D),
        rgb6(0x9E, 0xFF, 0x7D),
        rgb6(0x7D, 0xFF, 0x7D), // 72. green
        rgb6(0x7D, 0xFF, 0x9E),
        rgb6(0x7D, 0xFF, 0xBE),
        rgb6(0x7D, 0xFF, 0xDF),
        rgb6(0x7D, 0xFF, 0xFF), // 76. cyan
        rgb6(0x7D, 0xDF, 0xFF),
        rgb6(0x7D, 0xBE, 0xFF),
        rgb6(0x7D, 0x9E, 0xFF),

        // 80-103: 72% whitemix of 32-55
        rgb6(0xB6, 0xB6, 0xFF), // 80. blue
        rgb6(0xC7, 0xB6, 0xFF),
        rgb6(0xDB, 0xB6, 0xFF),
        rgb6(0xEB, 0xB6, 0xFF),
        rgb6(0xFF, 0xB6, 0xFF), // 84. magenta
        rgb6(0xFF, 0xB6, 0xEB),
        rgb6(0xFF, 0xB6, 0xDB),
        rgb6(0xFF, 0xB6, 0xC7),
        rgb6(0xFF, 0xB6, 0xB6), // 88. red
        rgb6(0xFF, 0xC7, 0xB6),
        rgb6(0xFF, 0xDB, 0xB6),
        rgb6(0xFF, 0xEB, 0xB6),
        rgb6(0xFF, 0xFF, 0xB6), // 92. yellow
        rgb6(0xEB, 0xFF, 0xB6),
        rgb6(0xDB, 0xFF, 0xB6),
        rgb6(0xC7, 0xFF, 0xB6),
        rgb6(0xB6, 0xFF, 0xB6), // 96. green
        rgb6(0xB6, 0xFF, 0xC7),
        rgb6(0xB6, 0xFF, 0xDB),
        rgb6(0xB6, 0xFF, 0xEB),
        rgb6(0xB6, 0xFF, 0xFF), // 100. cyan
        rgb6(0xB6, 0xEB, 0xFF),
        rgb6(0xB6, 0xDB, 0xFF),
        rgb6(0xB6, 0xC7, 0xFF),

        // 104-175: 56% blackmix of 32-103
        rgb6(0x00, 0x00, 0x71), // 104
        rgb6(0x1C, 0x00, 0x71),
        rgb6(0x38, 0x00, 0x71),
        rgb6(0x55, 0x00, 0x71),
        rgb6(0x71, 0x00, 0x71), // 108
        rgb6(0x71, 0x00, 0x55),
        rgb6(0x71, 0x00, 0x38),
        rgb6(0x71, 0x00, 0x1C),
        rgb6(0x71, 0x00, 0x00), // 112
        rgb6(0x71, 0x1C, 0x00),
        rgb6(0x71, 0x38, 0x00),
        rgb6(0x71, 0x55, 0x00),
        rgb6(0x71, 0x71, 0x00), // 116
        rgb6(0x55, 0x71, 0x00),
        rgb6(0x38, 0x71, 0x00),
        rgb6(0x1C, 0x71, 0x00),
        rgb6(0x00, 0x71, 0x00), // 120
        rgb6(0x00, 0x71, 0x1C),
        rgb6(0x00, 0x71, 0x38),
        rgb6(0x00, 0x71, 0x55),
        rgb6(0x00, 0x71, 0x71), // 124
        rgb6(0x00, 0x55, 0x71),
        rgb6(0x00, 0x38, 0x71),
        rgb6(0x00, 0x1C, 0x71),

        rgb6(0x38, 0x38, 0x71), // 128
        rgb6(0x45, 0x38, 0x71),
        rgb6(0x55, 0x38, 0x71),
        rgb6(0x61, 0x38, 0x71),
        rgb6(0x71, 0x38, 0x71), // 132
        rgb6(0x71, 0x38, 0x61),
        rgb6(0x71, 0x38, 0x55),
        rgb6(0x71, 0x38, 0x45),
        rgb6(0x71, 0x38, 0x38), // 136
        rgb6(0x71, 0x45, 0x38),
        rgb6(0x71, 0x55, 0x38),
        rgb6(0x71, 0x61, 0x38),
        rgb6(0x71, 0x71, 0x38), // 140
        rgb6(0x61, 0x71, 0x38),
        rgb6(0x55, 0x71, 0x38),
        rgb6(0x45, 0x71, 0x38),
        rgb6(0x38, 0x71, 0x38), // 144
        rgb6(0x38, 0x71, 0x45),
        rgb6(0x38, 0x71, 0x55),
        rgb6(0x38, 0x71, 0x61),
        rgb6(0x38, 0x71, 0x71), // 148
        rgb6(0x38, 0x61, 0x71),
        rgb6(0x38, 0x55, 0x71),
        rgb6(0x38, 0x45, 0x71),

        rgb6(0x51, 0x51, 0x71), // 152
        rgb6(0x59, 0x51, 0x71),
        rgb6(0x61, 0x51, 0x71),
        rgb6(0x69, 0x51, 0x71),
        rgb6(0x71, 0x51, 0x71), // 156
        rgb6(0x71, 0x51, 0x69),
        rgb6(0x71, 0x51, 0x61),
        rgb6(0x71, 0x51, 0x59),
        rgb6(0x71, 0x51, 0x51), // 160
        rgb6(0x71, 0x59, 0x51),
        rgb6(0x71, 0x61, 0x51),
        rgb6(0x71, 0x69, 0x51),
        rgb6(0x71, 0x71, 0x51), // 164
        rgb6(0x69, 0x71, 0x51),
        rgb6(0x61, 0x71, 0x51),
        rgb6(0x59, 0x71, 0x51),
        rgb6(0x51, 0x71, 0x51), // 168
        rgb6(0x51, 0x71, 0x59),
        rgb6(0x51, 0x71, 0x61),
        rgb6(0x51, 0x71, 0x69),
        rgb6(0x51, 0x71, 0x71), // 172
        rgb6(0x51, 0x69, 0x71),
        rgb6(0x51, 0x61, 0x71),
        rgb6(0x51, 0x59, 0x71),

        // 176-247: 75% blackmix of 32-103
        rgb6(0x00, 0x00, 0x41), // 176
        rgb6(0x10, 0x00, 0x41),
        rgb6(0x20, 0x00, 0x41),
        rgb6(0x30, 0x00, 0x41),
        rgb6(0x41, 0x00, 0x41), // 180
        rgb6(0x41, 0x00, 0x30),
        rgb6(0x41, 0x00, 0x20),
        rgb6(0x41, 0x00, 0x10),
        rgb6(0x41, 0x00, 0x00), // 184
        rgb6(0x41, 0x10, 0x00),
        rgb6(0x41, 0x20, 0x00),
        rgb6(0x41, 0x30, 0x00),
        rgb6(0x41, 0x41, 0x00), // 188
        rgb6(0x30, 0x41, 0x00),
        rgb6(0x20, 0x41, 0x00),
        rgb6(0x10, 0x41, 0x00),
        rgb6(0x00, 0x41, 0x00), // 192
        rgb6(0x00, 0x41, 0x10),
        rgb6(0x00, 0x41, 0x20),
        rgb6(0x00, 0x41, 0x30),
        rgb6(0x00, 0x41, 0x41), // 196
        rgb6(0x00, 0x30, 0x41),
        rgb6(0x00, 0x20, 0x41),
        rgb6(0x00, 0x10, 0x41),

        rgb6(0x20, 0x20, 0x41), // 200
        rgb6(0x28, 0x20, 0x41),
        rgb6(0x30, 0x20, 0x41),
        rgb6(0x38, 0x20, 0x41),
        rgb6(0x41, 0x20, 0x41), // 204
        rgb6(0x41, 0x20, 0x38),
        rgb6(0x41, 0x20, 0x30),
        rgb6(0x41, 0x20, 0x28),
        rgb6(0x41, 0x20, 0x20), // 208
        rgb6(0x41, 0x28, 0x20),
        rgb6(0x41, 0x30, 0x20),
        rgb6(0x41, 0x38, 0x20),
        rgb6(0x41, 0x41, 0x20), // 212
        rgb6(0x38, 0x41, 0x20),
        rgb6(0x30, 0x41, 0x20),
        rgb6(0x28, 0x41, 0x20),
        rgb6(0x20, 0x41, 0x20), // 216
        rgb6(0x20, 0x41, 0x28),
        rgb6(0x20, 0x41, 0x30),
        rgb6(0x20, 0x41, 0x38),
        rgb6(0x20, 0x41, 0x41), // 220
        rgb6(0x20, 0x38, 0x41),
        rgb6(0x20, 0x30, 0x41),
        rgb6(0x20, 0x28, 0x41),

        rgb6(0x2C, 0x2C, 0x41), // 224
        rgb6(0x30, 0x2C, 0x41),
        rgb6(0x34, 0x2C, 0x41),
        rgb6(0x3C, 0x2C, 0x41),
        rgb6(0x41, 0x2C, 0x41), // 228
        rgb6(0x41, 0x2C, 0x3C),
        rgb6(0x41, 0x2C, 0x34),
        rgb6(0x41, 0x2C, 0x30),
        rgb6(0x41, 0x2C, 0x2C), // 232
        rgb6(0x41, 0x30, 0x2C),
        rgb6(0x41, 0x34, 0x2C),
        rgb6(0x41, 0x3C, 0x2C),
        rgb6(0x41, 0x41, 0x2C), // 236
        rgb6(0x3C, 0x41, 0x2C),
        rgb6(0x34, 0x41, 0x2C),
        rgb6(0x30, 0x41, 0x2C),
        rgb6(0x2C, 0x41, 0x2C), // 240
        rgb6(0x2C, 0x41, 0x30),
        rgb6(0x2C, 0x41, 0x34),
        rgb6(0x2C, 0x41, 0x3C),
        rgb6(0x2C, 0x41, 0x41), // 244
        rgb6(0x2C, 0x3C, 0x41),
        rgb6(0x2C, 0x34, 0x41),
        rgb6(0x2C, 0x30, 0x41),

        // 248-255: all black
        rgb6(0x00, 0x00, 0x00), // 248
        rgb6(0x00, 0x00, 0x00),
        rgb6(0x00, 0x00, 0x00),
        rgb6(0x00, 0x00, 0x00),
        rgb6(0x00, 0x00, 0x00), // 252
        rgb6(0x00, 0x00, 0x00),
        rgb6(0x00, 0x00, 0x00),
        rgb6(0x00, 0x00, 0x00),
    ];

    pal.to_vec()
}
